{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aradh\\\\OneDrive\\\\Documents\\\\ReactFromBasic\\\\ReactFramework\\\\react_guide4\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  if (action.type == 'USER_INPUT') return {\n    value: '',\n    isValid: false\n  }; // return new state which could be a object\n};\n\nconst Login = props => {\n  _s();\n\n  // const [enteredEmail, setEnteredEmail] = useState(\"\");\n  // const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState(\"\");\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: false\n  }); //Step 1:\n  // useEffect(()=>{\n  //   console.log('Effect Running');\n  // })\n  // //Step 2:\n  // useEffect(()=>{\n  //   console.log('Effect Running');\n  // }, [])\n  //Step 3:\n  // useEffect(()=>{\n  //   console.log('Effect Running');\n  // }, [enteredPassword])\n  //Step 4:\n  // useEffect(()=>{\n  //   console.log('Effect Running');\n  //   return ()=>{console.log('Effect Clean UP')}\n  // }, [enteredPassword])\n  //Step 5:\n  // useEffect(()=>{\n  //   console.log('Effect Running');\n  //   return ()=>{console.log('Effect Clean UP')}\n  // }, [])\n  // useEffect(() => {\n  //   console.log(\"checking validity\");\n  //   const identifier = setTimeout(() => {\n  //     setFormIsValid(\n  //       enteredEmail.includes(\"@\") && enteredPassword.trim().length > 6\n  //     );\n  //   }, 500);\n  //   return () => {\n  //     console.log(\"CLEAN UP\");\n  //     clearTimeout(identifier);\n  //   };\n  //   // this is a clean up function we can return in use effect function , this will perform a clean up process before\n  //   // this function executes for next time. It does not run before the very first side effect function run. it runs before every new\n  //   //side effect function executes.\n  // }, [enteredEmail, enteredPassword]);\n  //debouncing:- we will not do our work work for every key stroke ..because in complex situation such as in sending http request\n  //it can create network traffic and it is also possible that it sends too many unneccesary requests so debouncing is done .\n  //we wait for some time when user's typing is complete and then we send request . this will work fine .\n  // FOR EVERY KEYSTROKE WE ARE SETTING A TIMER\n\n  const emailChangeHandler = event => {\n    // setEnteredEmail(event.target.value);\n    dispatchEmail({\n      type: 'USER_INPUT',\n      val: event.target.value\n    });\n    setFormIsValid(event.target.value.includes(\"@\") && enteredPassword.trim().length > 6);\n  };\n\n  const passwordChangeHandler = event => {\n    setEnteredPassword(event.target.value);\n    setFormIsValid(emailState.isValid && event.target.value.trim().length > 6);\n  };\n\n  const validateEmailHandler = () => {\n    setEmailIsValid(emailState.isValid);\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState.value, enteredPassword);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailState.isValid === false ? classes.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordIsValid === false ? classes.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: enteredPassword,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"uyqzYLIltzch2BwxwrJrj9tQYRY=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useReducer","Card","classes","Button","emailReducer","state","action","type","value","isValid","Login","props","enteredPassword","setEnteredPassword","passwordIsValid","setPasswordIsValid","formIsValid","setFormIsValid","emailState","dispatchEmail","emailChangeHandler","event","val","target","includes","trim","length","passwordChangeHandler","validateEmailHandler","setEmailIsValid","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"sources":["C:/Users/aradh/OneDrive/Documents/ReactFromBasic/ReactFramework/react_guide4/src/components/Login/Login.js"],"sourcesContent":["import React, { useState, useEffect, useReducer} from \"react\";\n\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nconst emailReducer = (state, action)=>{\n  if(action.type == 'USER_INPUT')\n  return {value: '' , isValid: false} \n  // return new state which could be a object\n\n}\n\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState(\"\");\n  // const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState(\"\");\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const[emailState, dispatchEmail] = useReducer(emailReducer, {value: '' , isValid: false},);\n  //Step 1:\n  // useEffect(()=>{\n  //   console.log('Effect Running');\n  // })\n\n  // //Step 2:\n  // useEffect(()=>{\n  //   console.log('Effect Running');\n  // }, [])\n\n\n  //Step 3:\n  // useEffect(()=>{\n  //   console.log('Effect Running');\n  // }, [enteredPassword])\n\n  //Step 4:\n  // useEffect(()=>{\n  //   console.log('Effect Running');\n  //   return ()=>{console.log('Effect Clean UP')}\n  // }, [enteredPassword])\n\n\n  //Step 5:\n  // useEffect(()=>{\n  //   console.log('Effect Running');\n  //   return ()=>{console.log('Effect Clean UP')}\n  // }, [])\n\n\n  // useEffect(() => {\n  //   console.log(\"checking validity\");\n  //   const identifier = setTimeout(() => {\n  //     setFormIsValid(\n  //       enteredEmail.includes(\"@\") && enteredPassword.trim().length > 6\n  //     );\n  //   }, 500);\n  //   return () => {\n  //     console.log(\"CLEAN UP\");\n  //     clearTimeout(identifier);\n  //   };\n  //   // this is a clean up function we can return in use effect function , this will perform a clean up process before\n  //   // this function executes for next time. It does not run before the very first side effect function run. it runs before every new\n  //   //side effect function executes.\n  // }, [enteredEmail, enteredPassword]);\n\n  //debouncing:- we will not do our work work for every key stroke ..because in complex situation such as in sending http request\n  //it can create network traffic and it is also possible that it sends too many unneccesary requests so debouncing is done .\n  //we wait for some time when user's typing is complete and then we send request . this will work fine .\n  // FOR EVERY KEYSTROKE WE ARE SETTING A TIMER\n\n  const emailChangeHandler = (event) => {\n   // setEnteredEmail(event.target.value);\n   dispatchEmail({type: 'USER_INPUT', val: event.target.value})\n    setFormIsValid(\n      event.target.value.includes(\"@\") && enteredPassword.trim().length > 6\n    );\n  };\n\n  const passwordChangeHandler = (event) => {\n    setEnteredPassword(event.target.value);\n    setFormIsValid(\n      emailState.isValid && event.target.value.trim().length > 6\n    );\n  };\n\n  const validateEmailHandler = () => {\n    setEmailIsValid(emailState.isValid);\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailState.value, enteredPassword);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailState.isValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordIsValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={enteredPassword}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module"}